openapi: 3.0.0

info:
  title: Service API
  version: 1.0.0

servers:

  - url: http://localhost/service/api/v1
    description: Linux Development

  - url: http://host.docker.internal/service/api/v1
    description: WSL Development

paths:

  /item:
    post:
      description: Create a new item
      operationId: create_item
      x-openapi-router-controller: service.api.item
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: item
              $ref: '#/components/schemas/item'
      responses:
        201:
          description: Create item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'

    get:
      description: Return a list of items
      operationId: list_items
      x-openapi-router-controller: service.api.item
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/page_size'
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/order_by'
        - $ref: '#/components/parameters/status'
      responses:
        200:
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/item'

  /item/{item_id}:
    get:
      description: Returns the requested item details
      operationId: get_item
      x-openapi-router-controller: service.api.item
      parameters:
        - $ref: '#/components/parameters/item_id'
      responses:
        200:
          description: Requested item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'

    put:
      description: Update item details
      operationId: update_item
      x-openapi-router-controller: service.api.item
      parameters:
        - $ref: '#/components/parameters/item_id'
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: item
              $ref: '#/components/schemas/item'
      responses:
        200:
          description: Updated item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'

    delete:
      description: Delete the requested item
      operationId: delete_item
      x-openapi-router-controller: service.api.item
      parameters:
        - $ref: '#/components/parameters/item_id'
      responses:
        204:
          description: item deleted

  /health:
    get:
      description: Returns the service health status
      operationId: get_health
      x-openapi-router-controller: service.api.health
      responses:
        204:
          description: healthy


components:

  parameters:

    item_id:
      name: item_id
      description: Item's Unique identifier
      in: path
      required: true
      schema:
        type: string
        format: uuid

    page:
      in: query
      name: page
      description: The page number.
      schema:
        type: integer
        default: 0

    page_size:
      in: query
      name: page_size
      description: Number of elements in a page.
      schema:
        type: integer
        default: 25

    order:
      in: query
      name: order
      description: Sort order
      schema:
        type: string
        enum: ["asc", "desc"]
        default: "desc"

    order_by:
      name: order_by
      in: query
      description: Field to order by
      schema:
        type: string
        default: created_at

    status:
      name: status
      in: query
      description: Status to filter by
      required: false
      schema:
        type: string
        enum:
          - pending
          - in-progress
          - ready
          - error

  schemas:

    item:
      type: object
      description: Item
      properties:
        id:
          type: string
          format: uuid
          description: Item ID
          readOnly: true
        name:
          type: string
          description: Item name
          minLength: 1
          maxLength: 50
        status:
          type: string
          description: Item status
          readOnly: true
          enum:
            - pending
            - in-progress
            - ready
            - error
        created_at:
          type: string
          description: Creation time
          readOnly: true
          format: date-time
        updated_at:
          type: string
          description: Update time
          readOnly: true
          format: date-time
